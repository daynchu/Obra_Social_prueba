{"version":3,"sources":["logo.svg","Js/login.js","Js/firebase.js","Js/login_input.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebaseAppAuth","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","providers","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","withFirebaseAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signInWithGoogle","signInWithFacebook","signOut","signInWithGithub","signInWithTwitter","signInAnonymously","user","setError","loading","error","displayName","onClick","Ingreso","props","state","isLoginOpen","isRegisterOpen","this","setState","className","showLoginBox","bind","showRegisterBox","React","Component","LoginBox","Usuario","Contraseña","errors","e","showValidationErr","clearValidationErr","alert","target","value","elm","msg","prevState","newArr","err","push","UserNameErr","ContraseñaErr","htmlFor","type","name","placeholder","onChange","onChangeUsuario","onChangeContraseña","submitLogin","RegisterBox","UserName","Email","Pass","pswState","length","EmailErr","PassErr","pswCorto","pswMedio","pswLargo","onUsernameChange","onEmailChange","onPasswordChange","submitRegister","reactDOM","render","document","getElementById","App","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6JAAAA,EAAOC,QAAU,IAA0B,kC,2ICoDrCC,EA5CcC,gBCNL,CACXC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBD0CiBC,OAG9BC,EAAY,CAChBC,eAAgB,IAAIX,OAAcY,mBAClCC,iBAAkB,IAAIb,OAAcc,sBAIvBC,cAAiB,CAC9BL,YACAX,mBAFagB,EAhDH,SAAC,GAAD,EAEVC,2BAFU,EAGVC,+BAHU,IAIVC,EAJU,EAIVA,iBACAC,EALU,EAKVA,mBAIAC,GATU,EAMVC,iBANU,EAOVC,kBAPU,EAQVC,kBARU,EASVH,SAEAI,GAXU,EAUVC,SAVU,EAWVD,MAEAE,GAbU,EAYVC,MAZU,EAaVD,SAbU,OAeV,gBAAC,WAAD,KAEIF,EACI,mCAAWA,EAAKI,aAChB,sCAIJJ,EACI,0BAAQK,QAAST,GAAjB,SACA,0BAAQS,QAASX,GAAjB,uBAGFM,EACE,0BAAQK,QAAST,GAAjB,SACA,0BAAQS,QAASV,GAAjB,yBAIJO,GAAW,2C,0CE3CII,E,YAEjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CAAEC,aAAa,EAAMC,gBAAgB,GAFlC,E,4EAMdC,KAAKC,SAAS,CAACF,gBAAgB,EAAOD,aAAY,M,wCAIlDE,KAAKC,SAAS,CAACF,gBAAgB,EAAMD,aAAY,M,+BAIjD,OACI,yBAAKI,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAW,cAAgBF,KAAKC,SAASH,YAAc,sBAAwB,IAAKJ,QAASM,KAAKG,aAAaC,KAAKJ,OAAzH,YAGA,yBAAKE,UAAW,cAAgBF,KAAKC,SAASF,eAAiB,sBAAwB,IAAKL,QAASM,KAAKK,gBAAgBD,KAAKJ,OAA/H,cAKI,yBAAKE,UAAU,iBAElBF,KAAKH,MAAMC,aAAe,kBAAC,EAAD,MAC1BE,KAAKH,MAAME,gBAAkB,kBAAC,EAAD,Y,GA9BLO,IAAMC,WAuCrCC,E,YAEF,WAAYZ,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPY,QAAQ,GACRC,gBAAW,GACXC,OAAQ,IALE,E,yEASVC,GAEmB,KAAvBZ,KAAKH,MAAMY,UAERT,KAAKa,kBAAkB,UAAW,iBAClCb,KAAKc,mBAAmB,YAEH,KAA1Bd,KAAKH,MAAMa,kBAELV,KAAKa,kBAAkB,gBAAc,uBACrCb,KAAKc,mBAAmB,kBAGD,KAAvBd,KAAKH,MAAMY,SAEjBM,MAAMf,KAAKH,MAAMa,mB,sCAKPE,GACdZ,KAAKC,SAAS,CAAEQ,QAASG,EAAEI,OAAOC,U,4CAGjBL,GACfZ,KAAKC,SAAS,CAAES,gBAAYE,EAAEI,OAAOC,U,wCAGvBC,EAAIC,GAClBnB,KAAKC,UAAS,SAACmB,GAAD,MAAe,CAAET,OAAO,GAAD,mBAAMS,EAAUT,QAAhB,CAAuB,CAACO,MAAIC,e,yCAGlDD,GACXlB,KAAKC,UAAS,SAACmB,GACX,IAAIC,EAAS,GADY,uBAEzB,IAAI,IAAJ,IAAeD,EAAUT,OAAzB,+CACA,CAAC,IADOW,EACR,QACOJ,IAAQI,EAAIJ,KAEXG,EAAOE,KAAKD,IANK,kFAQpB,OAAOD,O,+BAKpB,IAAIG,EAAc,KAAOC,EAAc,KADlC,uBAGL,IAAI,IAAJ,IAAezB,KAAKH,MAAMc,OAA1B,+CAAiC,CAAC,IAA1BW,EAAyB,QAET,YAAZA,EAAIJ,MAERM,EAAYF,EAAIH,KAGJ,kBAAZG,EAAIJ,MAEJO,EAAcH,EAAIH,MAZrB,kFAeN,OACC,yBAAKjB,UAAU,mBACd,yBAAKA,UAAU,UAAf,YAID,yBAAKA,UAAU,OAEf,yBAAKA,UAAU,eACf,2BAAOwB,QAAQ,YAAf,qBACA,2BAAOC,KAAK,OAAOC,KAAK,WAAW1B,UAAU,cAAc2B,YAAY,oBAAoBC,SAAU9B,KAAK+B,gBAAgB3B,KAAKJ,QAC/H,2BAAOE,UAAU,UAAjB,IAA4BsB,GAA4B,KAIxD,yBAAKtB,UAAU,eACf,2BAAOwB,QAAQ,QAAf,iBACA,2BAAOC,KAAK,WAAWC,KAAK,OAAO1B,UAAU,cAAc2B,YAAY,gBAAaC,SAAU9B,KAAKgC,wBAAmB5B,KAAKJ,QAC3H,2BAAOE,UAAU,UAAjB,IAA4BuB,GAAgC,KAG5D,4BAAQE,KAAK,SAASzB,UAAU,YAAYR,QAASM,KAAKiC,YAAY7B,KAAKJ,OAA3E,kB,GA5FoBM,IAAMC,WAqGxB2B,E,YAEF,WAAYtC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPsC,SAAS,GACTC,MAAM,GACNC,KAAK,GACL1B,OAAQ,GACR2B,SAAS,MAPC,E,4EAWP1B,GACiB,KAAxBZ,KAAKH,MAAMsC,UAEZnC,KAAKa,kBAAkB,WAAY,iBAEb,KAArBb,KAAKH,MAAMuC,OAEXpC,KAAKa,kBAAkB,QAAS,eAEV,KAApBb,KAAKH,MAAMwC,MAEfrC,KAAKa,kBAAkB,OAAQ,yB,wCAInBK,EAAIC,GACtBnB,KAAKC,UAAS,SAACmB,GAAD,MAAe,CAAET,OAAO,GAAD,mBAAMS,EAAUT,QAAhB,CAAuB,CAACO,MAAIC,e,yCAI9CD,GACnBlB,KAAKC,UAAS,SAACmB,GACX,IAAIC,EAAS,GADY,uBAEzB,IAAI,IAAJ,IAAeD,EAAUT,OAAzB,+CACA,CAAC,IADOW,EACR,QACOJ,IAAQI,EAAIJ,KAEXG,EAAOE,KAAKD,IANK,kFAQpB,OAAOD,O,uCAICT,GACbZ,KAAKC,SAAS,CAAEkC,SAAUvB,EAAEI,OAAOC,QACnCjB,KAAKc,mBAAmB,c,oCAGdF,GACVZ,KAAKC,SAAS,CAAEmC,MAAOxB,EAAEI,OAAOC,QAChCjB,KAAKc,mBAAmB,W,uCAIXF,GACbZ,KAAKC,SAAS,CAAEoC,KAAMzB,EAAEI,OAAOC,QAC/BjB,KAAKc,mBAAmB,QAExBd,KAAKC,SAAS,CAACqC,SAAU,UACtB1B,EAAEI,OAAOC,MAAMsB,OAAS,EAEvBvC,KAAKC,SAAS,CAACqC,SAAU,WACpB1B,EAAEI,OAAOC,MAAMsB,OAAQ,IAE5BvC,KAAKC,SAAS,CAACqC,SAAU,Y,+BAM7B,IAAId,EAAc,KAAMgB,EAAU,KAAOC,EAAQ,KAF5C,uBAIL,IAAI,IAAJ,IAAezC,KAAKH,MAAMc,OAA1B,+CAAiC,CAAC,IAA1BW,EAAyB,QACT,aAAZA,EAAIJ,MAERM,EAAYF,EAAIH,KAEJ,SAAZG,EAAIJ,MAEJuB,EAAQnB,EAAIH,KAEA,UAAZG,EAAIJ,MAEJsB,EAASlB,EAAIH,MAfhB,kFAmBL,IAAIuB,EAAU,KAAMC,EAAW,KAAMC,EAAW,KAehD,MAd2B,UAAxB5C,KAAKH,MAAMyC,SAEVI,GAAS,EACqB,WAAxB1C,KAAKH,MAAMyC,UAEjBI,GAAS,EACTC,GAAS,GACqB,UAAxB3C,KAAKH,MAAMyC,WAEjBI,GAAS,EACTC,GAAS,EACTC,GAAS,GAIb,yBAAK1C,UAAU,mBACX,yBAAKA,UAAU,UAAf,aAGJ,yBAAKA,UAAU,OAEf,yBAAKA,UAAU,eACf,2BAAOwB,QAAQ,YAAf,qBACA,2BAAOC,KAAK,OAAOC,KAAK,WAAW1B,UAAU,cAAc2B,YAAY,oBAAoBC,SAAU9B,KAAK6C,iBAAiBzC,KAAKJ,QAChI,2BAAOE,UAAU,UAAjB,IAA4BsB,GAA4B,KAIxD,yBAAKtB,UAAU,eACf,2BAAOwB,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOC,KAAK,QAAQ1B,UAAU,cAAc2B,YAAY,gBAAgBC,SAAU9B,KAAK8C,cAAc1C,KAAKJ,QACtH,2BAAOE,UAAU,UAAjB,IAA4BsC,GAAsB,KAGlD,yBAAKtC,UAAU,eACf,2BAAOwB,QAAQ,QAAf,iBACA,2BAAOC,KAAK,WAAWC,KAAK,OAAO1B,UAAU,cAAc2B,YAAY,gBAAaC,SAAU9B,KAAK+C,iBAAiB3C,KAAKJ,QACzH,2BAAOE,UAAU,UAAjB,IAA4BuC,GAAoB,IAEhDzC,KAAKH,MAAMyC,UAAW,yBAAKpC,UAAU,kBAClC,yBAAKA,UAAW,iBAAmBwC,EAAY,OAAS,MACxD,yBAAKxC,UAAW,iBAAmByC,EAAY,OAAS,MACxD,yBAAKzC,UAAW,iBAAmB0C,EAAY,OAAS,QAM3D,4BAAQjB,KAAK,SAASzB,UAAU,YAAYR,QAASM,KAAKgD,eAAe5C,KAAKJ,OAA9E,oB,GA3IuBM,IAAMC,WAmJjC0C,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,SClRrCC,MAXf,WACE,OACE,yBAAKnD,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,SCCYoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAST,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBQ,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6d989e5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import * as React from 'react';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n \r\nimport withFirebaseAuth, { WrappedComponentProps } from 'react-with-firebase-auth';\r\n \r\nimport firebaseConfig from './firebase';\r\n \r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\n\r\nconst App = ({\r\n  /** These props are provided by withFirebaseAuth HOC */\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signInWithGoogle,\r\n  signInWithFacebook,\r\n  signInWithGithub,\r\n  signInWithTwitter,\r\n  signInAnonymously,\r\n  signOut,\r\n  setError,\r\n  user,\r\n  error,\r\n  loading,\r\n}: WrappedComponentProps) => (\r\n  <React.Fragment>\r\n    {\r\n      user\r\n        ? <h1>Hola, {user.displayName}</h1>\r\n        : <h1>Ingresar</h1>\r\n    }\r\n \r\n    {   \r\n      user\r\n        ? <button onClick={signOut}>Salir</button>\r\n        : <button onClick={signInWithGoogle}>Ingresar con google</button>\r\n    }\r\n    {\r\n        user\r\n        ? <button onClick={signOut}>Salir</button>\r\n        : <button onClick={signInWithFacebook}>Ingresar con facebook</button>\r\n    }\r\n \r\n    {\r\n      loading && <h2>Loading..</h2>\r\n    }\r\n  </React.Fragment>\r\n);\r\n \r\nconst firebaseAppAuth = firebaseApp.auth();\r\n \r\n/** See the signature above to find out the available providers */\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n  facebookProvider: new firebase.auth.FacebookAuthProvider(),\r\n};\r\n\r\n/** Wrap it */\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(App);\r\n\r\n","\r\n\r\nexport default {\r\n    apiKey: \"AIzaSyBrsFHCw4tikzSxqRe5Oq4yWJ6cRNaFPGg\",\r\n    authDomain: \"excelencia-4beab.firebaseapp.com\",\r\n    databaseURL: \"https://excelencia-4beab.firebaseio.com\",\r\n    projectId: \"excelencia-4beab\",\r\n    storageBucket: \"excelencia-4beab.appspot.com\",\r\n    messagingSenderId: \"467080721280\",\r\n    appId: \"1:467080721280:web:6024e52a183fa7f81b4765\",\r\n    measurementId: \"G-PXS792N7FM\"\r\n}","import React from 'react'\r\nimport reactDOM from 'react-dom'\r\n\r\n\r\nexport default class Ingreso extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ isLoginOpen: true, isRegisterOpen: false};     \r\n    }\r\n\r\n    showLoginBox(){\r\n        this.setState({isRegisterOpen: false, isLoginOpen:true})\r\n    }\r\n\r\n    showRegisterBox(){\r\n        this.setState({isRegisterOpen: true, isLoginOpen:false})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"root-container\">\r\n            <div className=\"box-controller\">\r\n            <div className={\"controller\" + (this.setState.isLoginOpen ? \"selected-controller\" : \"\")} onClick={this.showLoginBox.bind(this)}>\r\n                Ingresar\r\n            </div>\r\n            <div className={\"controller\" + (this.setState.isRegisterOpen ? \"selected-controller\" : \"\")} onClick={this.showRegisterBox.bind(this)}>\r\n               Registrar \r\n               </div>\r\n             </div>\r\n            \r\n                <div className=\"box-container\">\r\n\r\n            {this.state.isLoginOpen && <LoginBox/>}\r\n            {this.state.isRegisterOpen && <RegisterBox/>}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass LoginBox extends  React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            Usuario:\"\",\r\n            Contraseña:\"\",\r\n            errors: []\r\n       };\r\n    }\r\n\r\nsubmitLogin(e){\r\n\r\n    if (this.state.Usuario === \"\")\r\n        {\r\n           this.showValidationErr(\"Usuario\", \"Usuario vacio\")\r\n           this.clearValidationErr(\"Usuario\");\r\n        } \r\n  if (this.state.Contraseña === \"\")\r\n        {\r\n            this.showValidationErr(\"Contraseña\", \"Contraseña vacio\")\r\n            this.clearValidationErr(\"Contraseña\");\r\n        }\r\n  \r\n        if (this.state.Usuario !== \"\")\r\n  {\r\n      alert(this.state.Contraseña)\r\n  }\r\n}\r\n\r\n\r\nonChangeUsuario(e){\r\n  this.setState({ Usuario: e.target.value});\r\n}\r\n\r\nonChangeContraseña(e){\r\n    this.setState({ Contraseña: e.target.value});\r\n}\r\n\r\nshowValidationErr(elm,msg){\r\n    this.setState((prevState) =>({ errors: [...prevState.errors,{elm,msg}]}))\r\n    }\r\n\r\nclearValidationErr(elm){\r\n        this.setState((prevState) => {\r\n            let newArr = []\r\n            for(let err of prevState.errors)\r\n            {\r\n                if(elm !== err.elm)\r\n                {\r\n                    newArr.push(err)\r\n                }\r\n            }    return newArr\r\n        })\r\n        }\r\n\r\nrender (){\r\n    let UserNameErr = null , ContraseñaErr=null;\r\n\r\n    for(let err of this.state.errors){\r\n        \r\n        if (    err.elm === \"Usuario\")\r\n        {\r\n            UserNameErr=err.msg\r\n        }\r\n\r\n        if (err.elm === \"Contraseña\")\r\n        {\r\n            ContraseñaErr=err.msg\r\n        } \r\n    }\r\n   return ( \r\n    <div className=\"inner-container\">\r\n     <div className=\"header\">\r\n            Ingresar\r\n    </div>\r\n\r\n    <div className=\"box\">\r\n\r\n    <div className=\"input-group\">\r\n    <label htmlFor=\"UserName\">Nombre de Usuario</label>\r\n    <input type=\"text\" name=\"UserName\" className=\"login-input\" placeholder=\"Nombre de Usuario\" onChange={this.onChangeUsuario.bind(this)}/>\r\n    <small className=\"danger\"> {UserNameErr ? UserNameErr : \"\"}</small> \r\n    </div>\r\n\r\n\r\n    <div className=\"input-group\">\r\n    <label htmlFor=\"Pass\">Contraseña</label>\r\n    <input type=\"password\" name=\"Pass\" className=\"login-input\" placeholder=\"Contraseña\" onChange={this.onChangeContraseña.bind(this)}/>\r\n    <small className=\"danger\"> {ContraseñaErr ? ContraseñaErr : \"\"}</small> \r\n    </div>\r\n\r\n    <button type=\"button\" className=\"login-btn\" onClick={this.submitLogin.bind(this)}>Ingresar</button>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass RegisterBox extends  React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            UserName:\"\",\r\n            Email:\"\",\r\n            Pass:\"\",\r\n            errors: [],\r\n            pswState:null\r\n       };\r\n    }\r\n\r\nsubmitRegister(e){\r\n    if (this.state.UserName === \"\")\r\n    {\r\n       this.showValidationErr(\"UserName\", \"Usuario vacio\")\r\n    } \r\n    if (this.state.Email === \"\")\r\n    {\r\n        this.showValidationErr(\"Email\", \"Email vacio\")\r\n    }\r\n      if (this.state.Pass === \"\")\r\n    {\r\n      this.showValidationErr(\"Pass\", \"Contraseña vacio\")\r\n    }\r\n}\r\n\r\nshowValidationErr(elm,msg){\r\nthis.setState((prevState) =>({ errors: [...prevState.errors,{elm,msg}]}))\r\n\r\n}\r\n\r\nclearValidationErr(elm){\r\nthis.setState((prevState) => {\r\n    let newArr = []\r\n    for(let err of prevState.errors)\r\n    {\r\n        if(elm !== err.elm)\r\n        {\r\n            newArr.push(err)\r\n        }\r\n    }    return newArr\r\n})\r\n}\r\n\r\nonUsernameChange(e){\r\n    this.setState({ UserName: e.target.value});\r\n    this.clearValidationErr(\"UserName\");\r\n}\r\n\r\nonEmailChange(e){\r\n    this.setState({ Email: e.target.value})\r\n    this.clearValidationErr(\"Email\");\r\n\r\n}\r\n\r\nonPasswordChange(e){\r\n    this.setState({ Pass: e.target.value})\r\n    this.clearValidationErr(\"Pass\");\r\n\r\n    this.setState({pswState: \"Corta\"})\r\n    if(e.target.value.length > 8)\r\n    {\r\n        this.setState({pswState: \"Medium\"})\r\n    }else if(e.target.value.length >12 )\r\n    {\r\n        this.setState({pswState: \"Larga\"})\r\n    }\r\n}\r\n\r\nrender (){\r\n\r\n    let UserNameErr = null, EmailErr= null , PassErr=null;\r\n\r\n    for(let err of this.state.errors){    \r\n        if (    err.elm === \"UserName\")\r\n        {\r\n            UserNameErr=err.msg\r\n        }\r\n        if (err.elm === \"Pass\")\r\n        {\r\n            PassErr=err.msg\r\n        } \r\n        if (err.elm === \"Email\")\r\n        {\r\n            EmailErr=err.msg;\r\n        }\r\n    }\r\n\r\n    let pswCorto= null, pswMedio = null, pswLargo = null;\r\n    if(this.state.pswState === \"Corta\")\r\n    {\r\n        pswCorto=true;\r\n    }else if (this.state.pswState === \"Medium\")\r\n    {\r\n        pswCorto=true;\r\n        pswMedio=true;\r\n    }else if (this.state.pswState === \"Larga\")\r\n    {\r\n        pswCorto=true;\r\n        pswMedio=true;\r\n        pswLargo=true;\r\n    }\r\n\r\n    return(\r\n    <div className=\"inner-container\">\r\n        <div className=\"header\">\r\n            Registrar\r\n        </div>\r\n    <div className=\"box\">\r\n\r\n    <div className=\"input-group\">\r\n    <label htmlFor=\"UserName\">Nombre de Usuario</label>\r\n    <input type=\"text\" name=\"UserName\" className=\"login-input\" placeholder=\"Nombre de Usuario\" onChange={this.onUsernameChange.bind(this)}/>\r\n    <small className=\"danger\"> {UserNameErr ? UserNameErr : \"\"}</small> \r\n      </div>\r\n\r\n\r\n    <div className=\"input-group\">\r\n    <label htmlFor=\"Email\">Email</label>\r\n    <input type=\"text\" name=\"Email\" className=\"login-input\" placeholder=\"Ingrese email\" onChange={this.onEmailChange.bind(this)}/>\r\n    <small className=\"danger\"> {EmailErr ? EmailErr : \"\"}</small> \r\n    </div>\r\n\r\n    <div className=\"input-group\">\r\n    <label htmlFor=\"Pass\">Contraseña</label>\r\n    <input type=\"password\" name=\"Pass\" className=\"login-input\" placeholder=\"Contraseña\" onChange={this.onPasswordChange.bind(this)}/>\r\n    <small className=\"danger\"> {PassErr ? PassErr : \"\"}</small> \r\n   \r\n   {this.state.pswState &&<div className=\"password-state\">\r\n       <div className={\"pwd pwd-corto\" + (pswCorto ?  \"show\" : \"\")}></div>\r\n       <div className={\"pwd pwd-medio\" + (pswMedio ?  \"show\" : \"\")}></div>\r\n       <div className={\"pwd pwd-Largo\" + (pswLargo ?  \"show\" : \"\")}></div>\r\n   </div>}\r\n   \r\n    </div>\r\n\r\n\r\n    <button type=\"button\" className=\"login-btn\" onClick={this.submitRegister.bind(this)}>Registrar </button>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\nreactDOM.render(<Ingreso/>, document.getElementById(\"root\"));","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Js/login';\nimport Linput from './Js/login_input'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Linput/>\n        <Login/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}